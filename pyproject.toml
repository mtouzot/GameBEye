[project]
name = "gamebeye"
version = "0.0.0"
description = "A small Python library to process GameBoy Camera images"
authors = [
    {name = "mtouzot",email = "martin.touzot@gmail.com"}
]
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "piexif (>=1.1.3,<2.0.0)",
    "numpy (>=2.2.1,<3.0.0)",
    "opencv-python (>=4.10.0.84,<5.0.0.0)"
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Games/Entertainment",
    "Topic :: Multimedia",
    "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
homepage = "https://github.com/mtouzot/gamebeye"
changelog = "https://github.com/mtouzot/gamebeye/CHANGELOG.md"
documentation = "https://mtouzot.github.io/gamebeye"
issues = "https://github.com/mtouzot/gamebeye/issues"
funding = "https://www.paypal.com/paypalme/touzotmartin"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = "gamebeye"
addopts = [
    "-ra -q",
    "--import-mode=importlib",
]
minversion = "6.0"
testpaths = [
    "tests",
]

[tool.black]
line-length = 79

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
coverage = "^7.6.10"
ruff = "^0.9.3"

[tool.poetry.group.docs.dependencies]
setuptools = "^75.8.0"
sphinx = "^8.1.3"
sphinx-rtd-theme = "^3.0.2"
sphinx-favicon = "^1.0.1"

[tool.poetry]
packages = [
    { include = "gamebeye" },
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",  # PEP8 naming convetions
    "D"  # pydocstyle
]
ignore = [
    "D203",  # Ignoring `incorrect-blank-line-before-class`
    "D212"  # Ignoring `multi-line-summary-second-line`
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"**/docs/*" = ["D"]